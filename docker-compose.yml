version: '3.8'

services:
  # Servicio de la API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api-mantas-trenzas
    restart: always
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=root
      - DB_NAME=mantas_trenzas
      # Comentado Redis
      # - REDIS_HOST=redis
      # - REDIS_PORT=6379
      # - REDIS_PASSWORD=
      - USE_REDIS_MOCK=true
      - JWT_SECRET=your_jwt_secret_key
      - JWT_EXPIRES_IN=1d
      - ELASTICSEARCH_NODE=http://elasticsearch:9200
      - GOOGLE_CLIENT_ID=your_google_client_id
      - GOOGLE_CLIENT_SECRET=your_google_client_secret
      - FACEBOOK_APP_ID=your_facebook_app_id
      - FACEBOOK_APP_SECRET=your_facebook_app_secret
      - API_URL=http://localhost:3000
    volumes:
      - ./logs:/app/logs
    depends_on:
      - mysql
      # - redis
      - elasticsearch
    networks:
      - app-network

  # Servicio de MySQL
  mysql:
    image: mysql:8.0
    container_name: mysql-mantas-trenzas
    restart: always
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=mantas_trenzas
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network

  # Servicio de Redis para caché (comentado)
  # redis:
  #   image: redis:7.0-alpine
  #   container_name: redis-mantas-trenzas
  #   restart: always
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis-data:/data
  #   networks:
  #     - app-network

  # Servicio de Elasticsearch para búsquedas avanzadas
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.0
    container_name: elasticsearch-mantas-trenzas
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - app-network
    deploy:
      resources:
        limits:
          memory: 1G

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data: # redis-data:

  elasticsearch-data:
